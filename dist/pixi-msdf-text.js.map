{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap a5e42b138f430a23f178","webpack:///./src/index.ts","webpack:///./src/MSDFText.ts","webpack:///./src/MSDFRenderer.ts","webpack:///./src/msdf.vert","webpack:///./src/msdf.frag"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DA,wCAAsD;AAA7C,sCAAQ;AACjB,4CAA8C;AAArC,kDAAY;;;;;;;;;;;;;;;;;;;;AC2BrB;IAA8B,4BAAc;IAoBxC,kBAAY,IAAY,EAAE,OAAuB;QAAjD,YACI,kBAAM,OAAO,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,SAsC/C;QArCG,KAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,KAAI,CAAC,KAAK,GAAG;YACT,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,QAAQ,EAAE,OAAO,CAAC,QAAQ;YAC1B,KAAK,EAAE,OAAO,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS;YACrE,MAAM,EAAE,OAAO,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,MAAM;YAC/D,KAAK,EAAE,OAAO,CAAC,KAAK;YACpB,OAAO,EAAE,OAAO,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO;YAC/D,WAAW,EAAE,OAAO,CAAC,WAAW,IAAI,CAAC;YACrC,UAAU,EAAE,OAAO,CAAC,UAAU,IAAI,KAAK;YACvC,eAAe,EAAE,OAAO,CAAC,eAAe,IAAI,CAAC;YAC7C,eAAe,EAAE,OAAO,CAAC,eAAe,KAAK,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,eAAe;YACtF,cAAc,EAAE,OAAO,CAAC,cAAc,IAAI,CAAC;YAC3C,gBAAgB,EAAE,OAAO,CAAC,gBAAgB,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;YAClE,OAAO,EAAE,OAAO,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO;SAC/D,CAAC;QACF,EAAE,CAAC,CAAC,OAAO,CAAC,eAAe,KAAK,SAAS,IAAI,OAAO,CAAC,eAAe,KAAK,CAAC,CAAC,CAAC,CAAC;YACzE,KAAI,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC,CAAC;QAChC,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,KAAI,CAAC,KAAK,CAAC,YAAY,GAAG,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC;QAC1E,CAAC;QAED,gCAAgC;QAChC,KAAI,CAAC,eAAe,GAAG,OAAO,CAAC,cAAc,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC;QACzF,KAAI,CAAC,cAAc,GAAG,OAAO,CAAC,aAAa,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC;QACtF,KAAI,CAAC,YAAY,GAAG,OAAO,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC;QAEhF,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACvC,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,QAAQ,IAAI,CAAC,CAAC;QACvC,KAAI,CAAC,OAAO,GAAG,IAAI,IAAI,CAAC,eAAe,CAAC,cAAQ,KAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,EAAE,KAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7E,KAAI,CAAC,iBAAiB,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;QAE9C,mBAAmB;QACnB,KAAI,CAAC,WAAW,GAAG,OAAO,CAAC,UAAU,IAAI,CAAC,CAAC;QAC3C,KAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QACzB,KAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,KAAI,CAAC,UAAU,EAAE,CAAC;;IACtB,CAAC;IAEM,6BAAU,GAAjB;QACI,kBAAkB;QAClB,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACnE,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;YAAC,MAAM,IAAI,KAAK,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC3E,2CAA2C;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC3D,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC;QAEnC,IAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC;QAClD,IAAM,GAAG,GAAG,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,CAAC;QAC7D,IAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAM,UAAU,GAAa,EAAE,CAAC;QAChC,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACrC,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;QAEvC,IAAI,YAAY,GAAG,CAAC,CAAC,CAAC;QACtB,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,IAAI,GAAG,CAAC,CAAC;QACb,IAAI,SAAS,GAAG,CAAC,CAAC,CAAC;QACnB,IAAI,cAAc,GAAG,CAAC,CAAC;QACvB,IAAI,aAAa,GAAG,CAAC,CAAC;QACtB,IAAI,aAAa,GAAG,CAAC,CAAC;QAEtB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACzC,IAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAE1C,uCAAuC;YACvC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpC,SAAS,GAAG,CAAC,CAAC;gBACd,cAAc,GAAG,aAAa,CAAC;YACnC,CAAC;YAED,oBAAoB;YACpB,EAAE,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9C,aAAa,IAAI,IAAI,CAAC,cAAc,CAAC;gBACrC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAC/B,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;gBACrD,IAAI,EAAE,CAAC;gBAEP,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;gBACV,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,UAAU,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBACjE,YAAY,GAAG,CAAC,CAAC,CAAC;gBAClB,QAAQ,CAAC;YACb,CAAC;YAED,EAAE,CAAC,CAAC,SAAS,KAAK,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACnE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,SAAS,GAAG,aAAa,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC;gBACxE,CAAC,GAAG,SAAS,CAAC;gBACd,SAAS,GAAG,CAAC,CAAC,CAAC;gBACf,EAAE,aAAa,CAAC;gBAEhB,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC;gBACtC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBAChC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;gBACtD,IAAI,EAAE,CAAC;gBAEP,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;gBACV,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,UAAU,GAAG,KAAK,GAAG,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBACjE,YAAY,GAAG,CAAC,CAAC,CAAC;gBAClB,QAAQ,CAAC;YACb,CAAC;YAED,IAAM,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAE1C,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;gBAAC,QAAQ,CAAC;YAExB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,YAAY,KAAK,CAAC,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBAC9E,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC;YACpD,CAAC;YAED,KAAK,CAAC,IAAI,CAAC;gBACP,IAAI;gBACJ,QAAQ;gBACR,QAAQ,EAAE,IAAI,IAAI,CAAC,SAAS,CACxB,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,OAAO,GAAG,KAAK,EAChC,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,OAAO,GAAG,KAAK,EAChC,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,EAC9B,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAClC;gBACD,OAAO,EAAE,IAAI,IAAI,CAAC,SAAS,CACvB,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EACvB,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EACvB,QAAQ,CAAC,OAAO,CAAC,KAAK,EACtB,QAAQ,CAAC,OAAO,CAAC,MAAM,CAC1B;aACJ,CAAC,CAAC;YACH,+EAA+E;YAC/E,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC;YAC3D,aAAa,GAAG,GAAG,CAAC,CAAC,CAAC;YACtB,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC;YAC7E,YAAY,GAAG,QAAQ,CAAC;QAC5B,CAAC;QAED,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC/B,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;QAErD,IAAM,gBAAgB,GAAG,EAAE,CAAC;QAC5B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7B,IAAI,WAAW,GAAG,CAAC,CAAC;YAEpB,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,OAAO,CAAC,CAAC,CAAC;gBAC/B,WAAW,GAAG,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;YAC/C,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACvC,WAAW,GAAG,CAAC,YAAY,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACrD,CAAC;YACD,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACvC,CAAC;QAED,IAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QAEvB,qCAAqC;QACrC,IAAI,MAAM,GAAG,CAAC,CAAC,CAAC;QAChB,GAAG,CAAC,CAAe,UAAK,EAAL,eAAK,EAAL,mBAAK,EAAL,IAAK;YAAnB,IAAM,IAAI;YACX,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChE,EAAE,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACvB,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC;gBACnB,kBAAkB;gBAClB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;oBACvB,IAAI,CAAC,aAAa,CAAC,IAAI,IAAI,CAAC,SAAS,CACjC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,GAAG,KAAK,EAC/D,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,GAAG,KAAK,EAC/D,UAAU,CAAC,MAAM,CAAC,EAClB,QAAQ,CAAC,UAAU,GAAG,KAAK,CAC9B,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;gBACzB,CAAC;YACL,CAAC;SACJ;QACD,wBAAwB;QACxB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;QAChE,CAAC;QAED,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC;QACjC,IAAI,CAAC,iBAAiB,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,aAAa,CAAC,CAAC;QAE/E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACvC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;QAClD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAExD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,UAAU,EAAE,CAAC;IACtB,CAAC;IAED,sBAAW,0BAAI;aAAf,cAA4B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;aAChD,UAAgB,KAAK,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;;;OADhC;IAEhD,sBAAW,8BAAQ;aAAnB,cAA6B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;;;OAAA;IACjD,sBAAW,6BAAO;aAAlB,cAA4B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IACnD,sBAAW,+BAAS;aAApB,cAAiC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;;;OAAA;IAC1D,sBAAW,gCAAU;aAArB,cAAkC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;;;OAAA;IAC5D,sBAAW,8BAAQ;aAAnB,cAAgC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;;;OAAA;IACxD,sBAAW,gCAAU;aAArB,cAA0C,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;;;OAAA;IAElE,mCAAgB,GAAxB,UAAyB,QAAgB;QACrC,IAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACxD,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QACzC,wDAAwD;QACxD,IAAM,WAAW,GAAW,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC;QACxG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IAChD,CAAC;IAEO,6BAAU,GAAlB,UAAmB,KAAY;QAA/B,iBA4BC;QA3BG,IAAM,SAAS,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACzD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,KAAK,CAAC,OAAO,CAAC,cAAI;YACd,oBAAoB;YACpB,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1B,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1B,YAAY;YACZ,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;YAC9B,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YAE/B,KAAK;YACL,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACnB,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACnB,KAAK;YACL,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACnB,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,KAAK;YACL,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,KAAK;YACL,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,SAAS,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YAEnB,aAAa;YACb,EAAE,CAAC,CAAC,KAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBAAC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;QAClF,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;IAEO,wBAAK,GAAb,UAAc,KAAY,EAAE,QAAgB,EAAE,SAAiB;QAC3D,IAAM,GAAG,GAAG,IAAI,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,KAAK,CAAC,OAAO,CAAC,cAAI;YACd,uDAAuD;YACvD,IAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,QAAQ,CAAC;YACrC,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;YAC5D,IAAM,EAAE,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,SAAS,CAAC;YAC9D,IAAM,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,SAAS,CAAC;YACtC,KAAK;YACL,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;YACd,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;YACd,KAAK;YACL,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;YACd,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;YACd,KAAK;YACL,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;YACd,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;YACd,KAAK;YACL,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;YACd,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IAEO,wCAAqB,GAA7B,UAA8B,IAAY;QACtC,yEAAyE;QACzE,IAAM,YAAY,GAAG,IAAI,GAAG,CAAC,CAAC;QAC9B,IAAM,OAAO,GAAG,IAAI,WAAW,CAAC,YAAY,CAAC,CAAC;QAE9C,0CAA0C;QAC1C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;YACtD,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACvB,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC;QACD,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IAEO,gCAAa,GAArB,UAAsB,IAAoB,EAAE,aAAyB,EAAE,SAA4B,EAAE,SAAqB;QAA9E,iDAAyB;QAAE,gDAA4B;QAAE,yCAAqB;QACtH,IAAM,KAAK,GAAG,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;QACzB,KAAK;aACJ,SAAS,CAAC,aAAa,EAAE,SAAS,EAAE,SAAS,CAAC;aAC9C,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACnD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;IAEO,2BAAQ,GAAhB,UAAiB,KAAa;QAC1B,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC;IACL,eAAC;AAAD,CAAC,CArT6B,IAAI,CAAC,IAAI,CAAC,IAAI,GAqT3C;AArTY,4BAAQ;;;;;;;;;;;;;;;;;;;;ACzBrB,gBAAgB;AAChB,IAAM,UAAU,GAAG,mBAAO,CAAC,CAAa,CAAC,CAAC;AAC1C,IAAM,UAAU,GAAG,mBAAO,CAAC,CAAa,CAAC,CAAC;AAE1C;IAAkC,gCAAmB;IAIjD,sBAAY,QAA4B;eACpC,kBAAM,QAAQ,CAAC;IACnB,CAAC;IAEM,sCAAe,GAAtB;QACI,IAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;IAC9D,CAAC;IAEM,6BAAM,GAAb,UAAc,QAAkB;QAC5B,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;QACjC,IAAM,IAAI,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAC/B,IAAM,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC;QAEvB,WAAW;QACX,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YAAC,MAAM,CAAC;QAExD,IAAI,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAEpD,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACV,0BAA0B;YAC1B,MAAM,GAAG;gBACL,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,YAAY,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,EAAE,QAAQ,CAAC,QAAQ,EAAE,EAAE,CAAC,WAAW,CAAC;gBAC5F,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,kBAAkB,CAAC,EAAE,EAAE,QAAQ,CAAC,GAAG,EAAE,EAAE,CAAC,WAAW,CAAC;gBACnF,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE,EAAE,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC,WAAW,CAAC;gBACzF,0CAA0C;gBAC1C,GAAG,EAAE,IAAI;gBACT,KAAK,EAAE,QAAQ,CAAC,KAAK;gBACrB,UAAU,EAAE,QAAQ,CAAC,UAAU;aAClC,CAAC;YACF,MAAM,CAAC,GAAG,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE,CAAC;iBAC7C,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC;iBAC5B,YAAY,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,eAAe,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;iBACtG,YAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,aAAa,EAAE,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YAEtG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;QACpD,CAAC;QAED,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAE7B,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,KAAK,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;YAC9B,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QACzC,CAAC;QAED,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,KAAK,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;YACxC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAChD,CAAC;QAED,MAAM,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAE9C,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAEnC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAEhE,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;YAAC,QAAQ,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAEpE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,iBAAiB,GAAG,QAAQ,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACjF,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAC;QACrD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAChE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;QACrE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,GAAG,CAAC,CAAC;QAC1C,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;QAC9C,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;QAChD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACxD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC1E,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAChE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;QACnD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,YAAY,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3G,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC9E,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC;QAC1D,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC;QAE7D,IAAM,QAAQ,GAAG,QAAQ,CAAC,QAAQ,GAAG,EAAE,CAAC,SAAS,CAAC;QAClD,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAC1D,CAAC;IACL,mBAAC;AAAD,CAAC,CAnFiC,IAAI,CAAC,cAAc,GAmFpD;AAnFY,oCAAY;AAqFzB,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;;;;;;;AC5FxD,oEAAoE,+BAA+B,mCAAmC,gCAAgC,+BAA+B,+BAA+B,sBAAsB,oCAAoC,4HAA4H,GAAG,G;;;;;;ACA7Z,gEAAgE,uBAAuB,6BAA6B,wBAAwB,2BAA2B,yBAAyB,0BAA0B,sBAAsB,0DAA0D,2BAA2B,wDAAwD,4BAA4B,gCAAgC,2BAA2B,4BAA4B,6CAA6C,+CAA+C,GAAG,sBAAsB,sEAAsE,+CAA+C,2DAA2D,wDAAwD,oBAAoB,iBAAiB,6EAA6E,uFAAuF,6FAA6F,mEAAmE,OAAO,OAAO,+EAA+E,kCAAkC,OAAO,sDAAsD,+BAA+B,8BAA8B,OAAO,OAAO,oFAAoF,oFAAoF,iGAAiG,mEAAmE,mDAAmD,OAAO,GAAG,C","file":"pixi-msdf-text.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MSDFText\"] = factory();\n\telse\n\t\troot[\"MSDFText\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a5e42b138f430a23f178","export { MSDFText, MSDFTextOption } from \"./MSDFText\";\r\nexport { MSDFRenderer } from \"./MSDFRenderer\";\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","\nexport interface MSDFTextOption {\n    // Basic\n    fontFace: string;\n    fontSize: number;\n    fillColor?: number;\n    weight?: number;\n    // Effect\n    texture?: PIXI.Texture;\n    strokeColor?: number;\n    strokeThickness?: number;\n    dropShadow?: boolean;\n    dropShadowColor?: number;\n    dropShadowAlpha?: number;\n    dropShadowOffset?: PIXI.Point;\n    dropShadowBlur?: number;\n    // Layout\n    align?: \"left\" | \"right\" | \"center\";\n    baselineOffset?: number;\n    letterSpacing?: number;\n    kerning?: boolean;\n    lineSpacing?: number;\n    maxWidth?: number;\n    // Debug\n    debugLevel?: 1 | 2 | 3;\n    pxrange?: number;\n}\n\nexport class MSDFText extends PIXI.mesh.Mesh {\n\n    private _text: string;\n    // Font data passed to renderer\n    private _font: any;\n    private _textWidth: number;\n    private _textHeight: number;\n    private _maxWidth: number;\n    private _anchor: PIXI.ObservablePoint;\n\n    // TODO: add Effect & Layout\n    private _baselineOffset: number;\n    private _letterSpacing: number;\n    private _lineSpacing: number;\n\n    // Debug\n    private _debugLevel: number;\n    // TODO: Metrics object\n    private _textMetricsBound: PIXI.Rectangle;\n\n    constructor(text: string, options: MSDFTextOption) {\n        super(options.texture || PIXI.Texture.WHITE);\n        this._text = text;\n        this._font = {\n            fontFace: options.fontFace,\n            fontSize: options.fontSize,\n            color: options.fillColor === undefined ? 0xFF0000 : options.fillColor,\n            weight: options.weight === undefined ? 0.5 : 1 - options.weight,\n            align: options.align,\n            kerning: options.kerning === undefined ? true : options.kerning,\n            strokeColor: options.strokeColor || 0,\n            dropShadow: options.dropShadow || false,\n            dropShadowColor: options.dropShadowColor || 0,\n            dropShadowAlpha: options.dropShadowAlpha === undefined ? 0.5 : options.dropShadowAlpha,\n            dropShadowBlur: options.dropShadowBlur || 0,\n            dropShadowOffset: options.dropShadowOffset || new PIXI.Point(2, 2),\n            pxrange: options.pxrange === undefined ? 3 : options.pxrange,\n        };\n        if (options.strokeThickness === undefined || options.strokeThickness === 0) {\n            this._font.strokeWeight = 0;\n        } else {\n            this._font.strokeWeight = this._font.weight - options.strokeThickness;\n        }\n\n        // TODO: layout option initialze\n        this._baselineOffset = options.baselineOffset === undefined ? 0 : options.baselineOffset;\n        this._letterSpacing = options.letterSpacing === undefined ? 0 : options.letterSpacing;\n        this._lineSpacing = options.lineSpacing === undefined ? 0 : options.lineSpacing;\n\n        this._textWidth = this._textHeight = 0;\n        this._maxWidth = options.maxWidth || 0;\n        this._anchor = new PIXI.ObservablePoint(() => { this.dirty++; }, this, 0, 0);\n        this._textMetricsBound = new PIXI.Rectangle();\n\n        // Debug initialize\n        this._debugLevel = options.debugLevel || 0;\n        this.pluginName = `msdf`;\n        this.dirty = 0;\n        this.updateText();\n    }\n\n    public updateText() {\n        // clear all gizmo\n        this.removeChildren();\n\n        const fontData = PIXI.extras.BitmapText.fonts[this._font.fontFace];\n        if (!fontData) throw new Error(\"Invalid fontFace: \" + this._font.fontFace);\n        // No beauty way to get bitmap font texture\n        this._texture = this.getBitmapTexture(this._font.fontFace);\n        this._font.rawSize = fontData.size;\n\n        const scale = this._font.fontSize / fontData.size;\n        const pos = new PIXI.Point(0, -this._baselineOffset * scale);\n        const chars = [];\n        const lineWidths: number[] = [];\n        const texWidth = this._texture.width;\n        const texHeight = this._texture.height;\n\n        let prevCharCode = -1;\n        let lastLineWidth = 0;\n        let maxLineWidth = 0;\n        let line = 0;\n        let lastSpace = -1;\n        let lastSpaceWidth = 0;\n        let spacesRemoved = 0;\n        let maxLineHeight = 0;\n\n        for (let i = 0; i < this._text.length; i++) {\n            const charCode = this._text.charCodeAt(i);\n\n            // If char is space, cache to lastSpace\n            if (/(\\s)/.test(this._text.charAt(i))) {\n                lastSpace = i;\n                lastSpaceWidth = lastLineWidth;\n            }\n\n            // If char is return\n            if (/(?:\\r\\n|\\r|\\n)/.test(this._text.charAt(i))) {\n                lastLineWidth -= this._letterSpacing;\n                lineWidths.push(lastLineWidth);\n                maxLineWidth = Math.max(maxLineWidth, lastLineWidth);\n                line++;\n\n                pos.x = 0;\n                pos.y += fontData.lineHeight * scale + this._lineSpacing * scale;\n                prevCharCode = -1;\n                continue;\n            }\n\n            if (lastSpace !== -1 && this._maxWidth > 0 && pos.x > this._maxWidth) {\n                PIXI.utils.removeItems(chars, lastSpace - spacesRemoved, i - lastSpace);\n                i = lastSpace;\n                lastSpace = -1;\n                ++spacesRemoved;\n\n                lastSpaceWidth -= this._letterSpacing;\n                lineWidths.push(lastSpaceWidth);\n                maxLineWidth = Math.max(maxLineWidth, lastSpaceWidth);\n                line++;\n\n                pos.x = 0;\n                pos.y += fontData.lineHeight * scale + this._lineSpacing * scale;\n                prevCharCode = -1;\n                continue;\n            }\n\n            const charData = fontData.chars[charCode];\n\n            if (!charData) continue;\n\n            if (this._font.kerning && prevCharCode !== -1 && charData.kerning[prevCharCode]) {\n                pos.x += charData.kerning[prevCharCode] * scale;\n            }\n\n            chars.push({\n                line,\n                charCode,\n                drawRect: new PIXI.Rectangle(\n                    pos.x + charData.xOffset * scale,\n                    pos.y + charData.yOffset * scale,\n                    charData.texture.width * scale,\n                    charData.texture.height * scale,\n                ),\n                rawRect: new PIXI.Rectangle(\n                    charData.texture.orig.x,\n                    charData.texture.orig.y,\n                    charData.texture.width,\n                    charData.texture.height,\n                ),\n            });\n            // lastLineWidth = pos.x + (charData.texture.width * scale + charData.xOffset);\n            pos.x += (charData.xAdvance + this._letterSpacing) * scale;\n            lastLineWidth = pos.x;\n            maxLineHeight = Math.max(maxLineHeight, pos.y + fontData.lineHeight * scale);\n            prevCharCode = charCode;\n        }\n\n        lineWidths.push(lastLineWidth);\n        maxLineWidth = Math.max(maxLineWidth, lastLineWidth);\n\n        const lineAlignOffsets = [];\n        for (let i = 0; i <= line; i++) {\n            let alignOffset = 0;\n\n            if (this._font.align === \"right\") {\n                alignOffset = maxLineWidth - lineWidths[i];\n            } else if (this._font.align === \"center\") {\n                alignOffset = (maxLineWidth - lineWidths[i]) / 2;\n            }\n            lineAlignOffsets.push(alignOffset);\n        }\n\n        const tint = this.tint;\n\n        // Update line alignment and fontSize\n        let lineNo = -1;\n        for (const char of chars) {\n            char.drawRect.x = char.drawRect.x + lineAlignOffsets[char.line];\n            if (lineNo !== char.line) {\n                lineNo = char.line;\n                // draw line gizmo\n                if (this._debugLevel > 1) {\n                    this.drawGizmoRect(new PIXI.Rectangle(\n                        char.drawRect.x - fontData.chars[char.charCode].xOffset * scale,\n                        char.drawRect.y - fontData.chars[char.charCode].yOffset * scale,\n                        lineWidths[lineNo],\n                        fontData.lineHeight * scale\n                    ), 1, 0x00FF00, 0.5);\n                }\n            }\n        }\n        // draw text bound gizmo\n        if (this._debugLevel > 0) {\n            this.drawGizmoRect(this.getLocalBounds(), 1, 0xFFFFFF, 0.5);\n        }\n\n        this._textWidth = maxLineWidth;\n        this._textHeight = maxLineHeight;\n        this._textMetricsBound = new PIXI.Rectangle(0, 0, maxLineWidth, maxLineHeight);\n\n        this.vertices = this.toVertices(chars);\n        this.uvs = this.toUVs(chars, texWidth, texHeight);\n        this.indices = this.createIndicesForQuads(chars.length);\n\n        this.dirty++;\n        this.indexDirty++;\n    }\n\n    public get text(): string { return this._text; }\n    public set text(value) { this._text = this.unescape(value); this.updateText(); }\n    public get fontData(): any { return this._font; }\n    public get glDatas(): any { return this._glDatas; }\n    public get textWidth(): number { return this._textWidth; }\n    public get textHeight(): number { return this._textHeight; }\n    public get maxWidth(): number { return this._maxWidth; }\n    public get textMetric(): PIXI.Rectangle { return this._textMetricsBound; }\n\n    private getBitmapTexture(fontFace: string): PIXI.Texture {\n        const fontData = PIXI.extras.BitmapText.fonts[fontFace];\n        if (!fontData) return PIXI.Texture.EMPTY;\n        // No beauty way to get bitmap font texture, hack needed\n        const texturePath: string = fontData.chars[Object.keys(fontData.chars)[0]].texture.baseTexture.imageUrl;\n        return PIXI.utils.TextureCache[texturePath];\n    }\n\n    private toVertices(chars: any[]): Float32Array {\n        const positions = new Float32Array(chars.length * 4 * 2);\n        let i = 0;\n        chars.forEach(char => {\n            // top left position\n            const x = char.drawRect.x;\n            const y = char.drawRect.y;\n            // quad size\n            const w = char.drawRect.width;\n            const h = char.drawRect.height;\n\n            // BL\n            positions[i++] = x;\n            positions[i++] = y;\n            // TL\n            positions[i++] = x;\n            positions[i++] = y + h;\n            // TR\n            positions[i++] = x + w;\n            positions[i++] = y + h;\n            // BR\n            positions[i++] = x + w;\n            positions[i++] = y;\n\n            // draw Gizmo\n            if (this._debugLevel > 2) this.drawGizmoRect(char.drawRect, 1, 0x0000AA, 0.5);\n        });\n        return positions;\n    }\n\n    private toUVs(chars: any[], texWidth: number, texHeight: number): Float32Array {\n        const uvs = new Float32Array(chars.length * 4 * 2);\n        let i = 0;\n        chars.forEach(char => {\n            // Note: v coordinate is reversed 2D space Y coordinate\n            const u0 = char.rawRect.x / texWidth;\n            const u1 = (char.rawRect.x + char.rawRect.width) / texWidth;\n            const v0 = (char.rawRect.y + char.rawRect.height) / texHeight;\n            const v1 = char.rawRect.y / texHeight;\n            // BL\n            uvs[i++] = u0;\n            uvs[i++] = v1;\n            // TL\n            uvs[i++] = u0;\n            uvs[i++] = v0;\n            // TR\n            uvs[i++] = u1;\n            uvs[i++] = v0;\n            // BR\n            uvs[i++] = u1;\n            uvs[i++] = v1;\n        });\n        return uvs;\n    }\n\n    private createIndicesForQuads(size: number): Uint16Array {\n        // the total number of indices in our array, there are 6 points per quad.\n        const totalIndices = size * 6;\n        const indices = new Uint16Array(totalIndices);\n\n        // fill the indices with the quads to draw\n        for (let i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\n            indices[i + 0] = j + 0;\n            indices[i + 1] = j + 1;\n            indices[i + 2] = j + 2;\n            indices[i + 3] = j + 0;\n            indices[i + 4] = j + 2;\n            indices[i + 5] = j + 3;\n        }\n        return indices;\n    }\n\n    private drawGizmoRect(rect: PIXI.Rectangle, lineThickness: number = 1, lineColor: number = 0xFFFFFF, lineAlpha: number = 1): void {\n        const gizmo = new PIXI.Graphics();\n        gizmo.nativeLines = true;\n        gizmo\n        .lineStyle(lineThickness, lineColor, lineAlpha)\n        .drawRect(rect.x, rect.y, rect.width, rect.height);\n        this.addChild(gizmo);\n    }\n\n    private unescape(input: string): string {\n        return input.replace(/(\\\\n|\\\\r)/g, \"\\n\");\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/MSDFText.ts","import { MSDFText, MSDFTextOption } from \"./MSDFText\";\nimport { glCore } from \"pixi.js\";\n\n// Shader loader\nconst vertShader = require(\"./msdf.vert\");\nconst fragShader = require(\"./msdf.frag\");\n\nexport class MSDFRenderer extends PIXI.ObjectRenderer {\n\n    private shader: PIXI.Shader;\n\n    constructor(renderer: PIXI.WebGLRenderer) {\n        super(renderer);\n    }\n\n    public onContextChange(): void {\n        const gl = this.renderer.gl;\n        this.shader = new PIXI.Shader(gl, vertShader, fragShader);\n    }\n\n    public render(msdfText: MSDFText) {\n        const renderer = this.renderer;\n        const texture = msdfText.texture;\n        const font = msdfText.fontData;\n        const gl = renderer.gl;\n\n        // validate\n        if (!texture || !texture.valid || !font.rawSize) return;\n\n        let glData = msdfText.glDatas[renderer.CONTEXT_UID];\n\n        if (!glData) {\n            // renderer.bindVao(null);\n            glData = {\n                shader: this.shader,\n                vertexBuffer: PIXI.glCore.GLBuffer.createVertexBuffer(gl, msdfText.vertices, gl.STREAM_DRAW),\n                uvBuffer: PIXI.glCore.GLBuffer.createVertexBuffer(gl, msdfText.uvs, gl.STREAM_DRAW),\n                indexBuffer: PIXI.glCore.GLBuffer.createIndexBuffer(gl, msdfText.indices, gl.STATIC_DRAW),\n                // build the vao object that will render..\n                vao: null,\n                dirty: msdfText.dirty,\n                indexDirty: msdfText.indexDirty,\n            };\n            glData.vao = new PIXI.glCore.VertexArrayObject(gl)\n                .addIndex(glData.indexBuffer)\n                .addAttribute(glData.vertexBuffer, glData.shader.attributes.aVertexPosition, gl.FLOAT, false, 2 * 4, 0)\n                .addAttribute(glData.uvBuffer, glData.shader.attributes.aTextureCoord, gl.FLOAT, false, 2 * 4, 0);\n\n            msdfText.glDatas[renderer.CONTEXT_UID] = glData;\n        }\n\n        renderer.bindVao(glData.vao);\n\n        if (msdfText.dirty !== glData.dirty) {\n            glData.dirty = msdfText.dirty;\n            glData.uvBuffer.upload(msdfText.uvs);\n        }\n\n        if (msdfText.indexDirty !== glData.indexDirty) {\n            glData.indexDirty = msdfText.indexDirty;\n            glData.indexBuffer.upload(msdfText.indices);\n        }\n\n        glData.vertexBuffer.upload(msdfText.vertices);\n\n        renderer.bindShader(glData.shader);\n\n        glData.shader.uniforms.uSampler = renderer.bindTexture(texture);\n\n        if (renderer.state) renderer.state.setBlendMode(msdfText.blendMode);\n\n        glData.shader.uniforms.translationMatrix = msdfText.worldTransform.toArray(true);\n        glData.shader.uniforms.u_alpha = msdfText.worldAlpha;\n        glData.shader.uniforms.u_color = PIXI.utils.hex2rgb(font.color);\n        glData.shader.uniforms.u_fontSize = font.fontSize * msdfText.scale.x;\n        glData.shader.uniforms.u_fontInfoSize = 1;\n        glData.shader.uniforms.u_weight = font.weight;\n        glData.shader.uniforms.u_pxrange = font.pxrange;\n        glData.shader.uniforms.strokeWeight = font.strokeWeight;\n        glData.shader.uniforms.strokeColor = PIXI.utils.hex2rgb(font.strokeColor);\n        glData.shader.uniforms.tint = PIXI.utils.hex2rgb(msdfText.tint);\n        glData.shader.uniforms.hasShadow = font.dropShadow;\n        glData.shader.uniforms.shadowOffset = new Float32Array([font.dropShadowOffset.x, font.dropShadowOffset.x]);\n        glData.shader.uniforms.shadowColor = PIXI.utils.hex2rgb(font.dropShadowColor);\n        glData.shader.uniforms.shadowAlpha = font.dropShadowAlpha;\n        glData.shader.uniforms.shadowSmoothing = font.dropShadowBlur;\n\n        const drawMode = msdfText.drawMode = gl.TRIANGLES;\n        glData.vao.draw(drawMode, msdfText.indices.length, 0);\n    }\n}\n\nPIXI.WebGLRenderer.registerPlugin(\"msdf\", MSDFRenderer);\n\n\n\n// WEBPACK FOOTER //\n// ./src/MSDFRenderer.ts","module.exports = \"#define GLSLIFY 1\\nattribute vec2 aVertexPosition;\\nattribute vec2 aTextureCoord;\\n\\nuniform mat3 translationMatrix;\\nuniform mat3 projectionMatrix;\\nuniform float u_fontInfoSize;\\n\\nvarying vec2 vTextureCoord;\\n\\nvoid main(void)\\n{\\n    vTextureCoord = aTextureCoord;\\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition * u_fontInfoSize, 1.0)).xy, 0.0, 1.0);\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/msdf.vert\n// module id = 3\n// module chunks = 0","module.exports = \"#define GLSLIFY 1\\nvarying vec2 vTextureCoord;\\nuniform vec3 u_color;\\nuniform sampler2D uSampler;\\nuniform float u_alpha;\\nuniform float u_fontSize;\\nuniform float u_weight;\\nuniform float u_pxrange;\\n\\nuniform vec3 tint;\\n// Stroke effect parameters\\nuniform float strokeWeight;\\nuniform vec3 strokeColor;\\n\\n// Shadow effect parameters\\nuniform bool hasShadow;\\nuniform vec2 shadowOffset;\\nuniform float shadowSmoothing;\\nuniform vec3 shadowColor;\\nuniform float shadowAlpha;\\n\\nfloat median(float r, float g, float b) {\\n    return max(min(r, g), min(max(r, g), b));\\n}\\n\\nvoid main(void)\\n{\\n    float smoothing = clamp(2.0 * u_pxrange / u_fontSize, 0.0, 0.5);\\n\\n    vec2 textureCoord = vTextureCoord * 2.;\\n    vec3 sample = texture2D(uSampler, vTextureCoord).rgb;\\n    float dist = median(sample.r, sample.g, sample.b);\\n\\n    float alpha;\\n    vec3 color;\\n\\n    // dirty if statment, will change soon\\n    if (strokeWeight > 0.0) {\\n        alpha = smoothstep(strokeWeight - smoothing, strokeWeight + smoothing, dist);\\n        float outlineFactor = smoothstep(u_weight - smoothing, u_weight + smoothing, dist);\\n        color = mix(strokeColor, u_color, outlineFactor) * alpha;\\n    } else {\\n        alpha = smoothstep(u_weight - smoothing, u_weight + smoothing, dist);\\n        color = u_color * alpha;\\n    }\\n    vec4 text = vec4(color * tint, alpha) * u_alpha;\\n    if (hasShadow == false) {\\n        gl_FragColor = text;\\n    } else {\\n        vec3 shadowSample = texture2D(uSampler, vTextureCoord - shadowOffset).rgb;\\n        float shadowDist = median(shadowSample.r, shadowSample.g, shadowSample.b);\\n        float distAlpha = smoothstep(0.5 - shadowSmoothing, 0.5 + shadowSmoothing, shadowDist);\\n        vec4 shadow = vec4(shadowColor, shadowAlpha * distAlpha);\\n        gl_FragColor = mix(shadow, text, text.a);\\n    }\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/msdf.frag\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}